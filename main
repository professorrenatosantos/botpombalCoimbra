#include <BotNRoll.h>
#include <BnrOneA.h>
#include <Servo.h>
//TESTE
// Distância mínima para considerar parede (em cm)


BotNRoll robot;
BnrOneA one;

const uint16_t DISTANCIA_PAREDE = 300;
const uint16_t DISTANCIA_PAREDE_FRENTE = 300;
const uint16_t IDEAL_MIN = 80;
const uint16_t IDEAL_MAX = 120;

//TESTE
/* The setup function runs once when you press reset or power the board */
void setup() {
    // Set baud rate to 9600bps for printing values on the serial monitor.
    Serial.begin(9600);
    Serial.println("BOIIIIIIIIII:");
    // Initialize the robot.
    robot.begin();

        // Print LDR value to serial monitor.
    Serial.println("LDR SENSOR VALUE:");
    Serial.print(robot.getLDRValue());
    Serial.println();

}
//TESTE
/* The setup function runs once when you press reset or power the board */
void loop() {
    uint16_t left = robot.getLidarLeftDistance();
    uint16_t front = robot.getLidarFrontDistance();
    uint16_t right = robot.getLidarRightDistance();

    Serial.print("L: "); Serial.print(left);
    Serial.print(" | F: "); Serial.print(front);
    Serial.print(" | R: "); Serial.println(right);



    // PRIORIDADE 1: Virar à esquerda se NÃO houver parede à esquerda
    if (left > DISTANCIA_PAREDE) {
        robot.move(10, 60);
        Serial.println("Virar à esquerda (sem parede à esquerda)");
    }
    // PRIORIDADE 2: Virar à direita se HÁ parede à frente E à esquerda
    else if (front < DISTANCIA_PAREDE_FRENTE && left < DISTANCIA_PAREDE) {
        robot.move(60, -10);  // curva acentuada à direita
        Serial.println("Virar à direita (parede à frente e à esquerda)");
    }
    // PRIORIDADE 3: Ajustar distância à parede da esquerda
    else {
        if (left < IDEAL_MIN) {
            robot.move(35, 10);
            Serial.println("Afastar da parede à esquerda");
        }
        else if (left > IDEAL_MAX) {
            robot.move(10, 35);
            Serial.println("Aproximar da parede à esquerda");
        }
        else {
            robot.move(35, 35);
            Serial.println("Distância ideal — seguir em frente");
        }
    }
   
}
